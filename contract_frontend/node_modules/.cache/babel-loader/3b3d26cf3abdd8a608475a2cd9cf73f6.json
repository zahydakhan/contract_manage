{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchTAGSs),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(onFetchTAGSStart),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addTAGSs),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(onAddTAGSStart),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(delTAGSs),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(onDelTAGSStart);\n\nimport { takeEvery, takeLatest, put, call } from 'redux-saga/effects';\nimport * as CONFIG_TAGS_types from './config_tags.types';\nimport axios from '../../utils1.js/axios';\nimport { delTAGSStart, delTAGSSuccess, delTAGSFailure, addTAGSStart, addTAGSSuccess, addTAGSFailure, fetchTAGSStart, fetchTAGSSuccess, fetchTAGSFailure } from './config_tags.actions'; //Fetch TAGS Saga\n\nexport function fetchTAGSs() {\n  var tagsList;\n  return _regeneratorRuntime.wrap(function fetchTAGSs$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('running axios');\n          _context.next = 4;\n          return axios.get(\"/basic/tag/\");\n\n        case 4:\n          tagsList = _context.sent;\n          console.log(tagsList);\n          _context.next = 8;\n          return put(fetchTAGSSuccess(tagsList.data));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put(fetchTAGSFailure(_context.t0.message));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\nexport function onFetchTAGSStart() {\n  return _regeneratorRuntime.wrap(function onFetchTAGSStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(CONFIG_TAGS_types.FETCH_TAGS_START, fetchTAGSs);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //Add TAGS Saga\n\nexport function addTAGSs(action) {\n  var tagsList;\n  return _regeneratorRuntime.wrap(function addTAGSs$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('running axios');\n          _context3.next = 4;\n          return axios.post(\"/basic/tag/\", action.payload);\n\n        case 4:\n          tagsList = _context3.sent;\n          _context3.next = 7;\n          return put(addTAGSSuccess(tagsList.data));\n\n        case 7:\n          _context3.next = 9;\n          return put(fetchTAGSStart());\n\n        case 9:\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put(addTAGSFailure(_context3.t0.message));\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\nexport function onAddTAGSStart() {\n  return _regeneratorRuntime.wrap(function onAddTAGSStart$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(CONFIG_TAGS_types.ADD_TAGS_START, addTAGSs);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //Delete TAGS Saga\n\nexport function delTAGSs(action) {\n  var tagsList;\n  return _regeneratorRuntime.wrap(function delTAGSs$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log('running axios');\n          _context5.next = 4;\n          return axios.delete(\"/basic/tag/\" + action.payload.id);\n\n        case 4:\n          tagsList = _context5.sent;\n          console.log(tagsList);\n          _context5.next = 8;\n          return put(delTAGSSuccess(tagsList.data));\n\n        case 8:\n          _context5.next = 10;\n          return put(fetchTAGSStart());\n\n        case 10:\n          _context5.next = 16;\n          break;\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 16;\n          return put(delTAGSFailure(_context5.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 12]]);\n}\nexport function onDelTAGSStart() {\n  return _regeneratorRuntime.wrap(function onDelTAGSStart$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(CONFIG_TAGS_types.DEL_TAGS_START, delTAGSs);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/src/redux/config_tags/config_tags.sagas.js"],"names":["fetchTAGSs","onFetchTAGSStart","addTAGSs","onAddTAGSStart","delTAGSs","onDelTAGSStart","takeEvery","takeLatest","put","call","CONFIG_TAGS_types","axios","delTAGSStart","delTAGSSuccess","delTAGSFailure","addTAGSStart","addTAGSSuccess","addTAGSFailure","fetchTAGSStart","fetchTAGSSuccess","fetchTAGSFailure","console","log","get","tagsList","data","message","FETCH_TAGS_START","action","post","payload","ADD_TAGS_START","delete","id","DEL_TAGS_START"],"mappings":"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","sourcesContent":["import { takeEvery, takeLatest, put, call } from 'redux-saga/effects'\r\n\r\nimport * as CONFIG_TAGS_types from './config_tags.types';\r\nimport axios from '../../utils1.js/axios'\r\n\r\nimport {\r\n    delTAGSStart,\r\n    delTAGSSuccess,\r\n    delTAGSFailure,\r\n    addTAGSStart,\r\n    addTAGSSuccess,\r\n    addTAGSFailure,\r\n    fetchTAGSStart,\r\n    fetchTAGSSuccess,\r\n    fetchTAGSFailure\r\n} from './config_tags.actions'\r\n\r\n//Fetch TAGS Saga\r\nexport function* fetchTAGSs() {\r\n    try {\r\n        console.log('running axios')\r\n        const tagsList = yield axios.get(`/basic/tag/`);\r\n        console.log(tagsList)\r\n\r\n        yield put(fetchTAGSSuccess(tagsList.data));\r\n    } catch (error) {\r\n        yield put(fetchTAGSFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* onFetchTAGSStart() {\r\n        yield takeLatest(CONFIG_TAGS_types.FETCH_TAGS_START, fetchTAGSs);\r\n    }\r\n    //Add TAGS Saga\r\nexport function* addTAGSs(action) {\r\n    try {\r\n        console.log('running axios')\r\n        const tagsList = yield axios.post(`/basic/tag/`, action.payload);\r\n        // console.log(tagsList)\r\n\r\n        yield put(addTAGSSuccess(tagsList.data));\r\n        yield put(fetchTAGSStart());\r\n    } catch (error) {\r\n        yield put(addTAGSFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* onAddTAGSStart() {\r\n    yield takeLatest(CONFIG_TAGS_types.ADD_TAGS_START, addTAGSs);\r\n}\r\n\r\n//Delete TAGS Saga\r\nexport function* delTAGSs(action) {\r\n    try {\r\n        console.log('running axios')\r\n        const tagsList = yield axios.delete(`/basic/tag/` + action.payload.id);\r\n        console.log(tagsList)\r\n\r\n        yield put(delTAGSSuccess(tagsList.data));\r\n        yield put(fetchTAGSStart());\r\n    } catch (error) {\r\n        yield put(delTAGSFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* onDelTAGSStart() {\r\n    yield takeLatest(CONFIG_TAGS_types.DEL_TAGS_START, delTAGSs);\r\n}"]},"metadata":{},"sourceType":"module"}