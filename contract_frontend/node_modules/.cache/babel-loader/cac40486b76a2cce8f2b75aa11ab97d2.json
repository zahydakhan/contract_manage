{"ast":null,"code":"import _objectSpread from \"C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zahyd\\\\OneDrive\\\\Desktop\\\\contract2\\\\Contract\\\\contract_frontend\\\\src\\\\pages\\\\create_contract\\\\components\\\\FormFields\\\\SelectMultiField.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PropTypes from 'prop-types';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport { InputLabel, FormControl, Select, MenuItem, FormHelperText } from '@material-ui/core';\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 100\n    }\n  }\n};\n\nfunction SelectField(props) {\n  _s();\n\n  var _this = this;\n\n  var label = props.label,\n      data = props.data,\n      rest = _objectWithoutProperties(props, [\"label\", \"data\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var selectedValue = field.value;\n\n  var _at = at(meta, 'touched', 'error'),\n      _at2 = _slicedToArray(_at, 2),\n      touched = _at2[0],\n      error = _at2[1];\n\n  var isError = touched && error && true;\n\n  function _renderHelperText() {\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, _objectSpread(_objectSpread({}, rest), {}, {\n    error: isError,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({\n      multiple: true\n    }, field), {}, {\n      MenuProps: MenuProps,\n      value: selectedValue ? selectedValue : '',\n      children: data.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.id,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedValue.indexOf(item.id) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, _this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), _renderHelperText()]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = SelectField;\nSelectField.defaultProps = {\n  data: []\n};\nSelectField.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default SelectField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectField\");","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/src/pages/create_contract/components/FormFields/SelectMultiField.jsx"],"names":["React","Checkbox","ListItemText","PropTypes","at","useField","InputLabel","FormControl","Select","MenuItem","FormHelperText","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","SelectField","props","label","data","rest","field","meta","selectedValue","value","touched","error","isError","_renderHelperText","map","item","id","indexOf","name","defaultProps","propTypes","array","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,EAAT,QAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACIC,UADJ,EAEIC,WAFJ,EAGIC,MAHJ,EAIIC,QAJJ,EAKIC,cALJ,QAMO,mBANP;AASA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,gBAAgB,GAAG,CAAzB;AACA,IAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD5B;AAEHK,MAAAA,KAAK,EAAE;AAFJ;AADC;AADE,CAAlB;;AASA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA;;AAAA,MAChBC,KADgB,GACSD,KADT,CAChBC,KADgB;AAAA,MACTC,IADS,GACSF,KADT,CACTE,IADS;AAAA,MACAC,IADA,4BACSH,KADT;;AAAA,kBAEFd,QAAQ,CAACc,KAAD,CAFN;AAAA;AAAA,MAEjBI,KAFiB;AAAA,MAEVC,IAFU;;AAAA,MAGTC,aAHS,GAGSF,KAHT,CAGhBG,KAHgB;;AAAA,YAICtB,EAAE,CAACoB,IAAD,EAAO,SAAP,EAAkB,OAAlB,CAJH;AAAA;AAAA,MAIjBG,OAJiB;AAAA,MAIRC,KAJQ;;AAKxB,MAAMC,OAAO,GAAGF,OAAO,IAAIC,KAAX,IAAoB,IAApC;;AACA,WAASE,iBAAT,GAA6B;AACzB,QAAID,OAAJ,EAAa;AACT,0BAAO,QAAC,cAAD;AAAA,kBAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAED,sBACI,QAAC,WAAD,kCAAiBN,IAAjB;AAAuB,IAAA,KAAK,EAAEO,OAA9B;AAAA,4BACI,QAAC,UAAD;AAAA,gBAAaT;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,QAAQ;AAAhB,OAAqBG,KAArB;AAA4B,MAAA,SAAS,EAAEV,SAAvC;AAAkD,MAAA,KAAK,EAAEY,aAAa,GAAGA,aAAH,GAAmB,EAAzF;AAAA,gBACKJ,IAAI,CAACU,GAAL,CAAS,UAACC,IAAD;AAAA,4BACN,QAAC,QAAD;AAAwB,UAAA,KAAK,EAAEA,IAAI,CAACC,EAApC;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,OAAO,EAAER,aAAa,CAACS,OAAd,CAAsBF,IAAI,CAACC,EAA3B,IAAiC,CAAC;AAArD;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,QAAC,YAAD;AAAc,YAAA,OAAO,EAAED,IAAI,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAAA,WAAeH,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,iBADM;AAAA,OAAT;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAWKH,iBAAiB,EAXtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA3BQZ,W;UAEiBb,Q;;;KAFjBa,W;AA6BTA,WAAW,CAACkB,YAAZ,GAA2B;AACvBf,EAAAA,IAAI,EAAE;AADiB,CAA3B;AAIAH,WAAW,CAACmB,SAAZ,GAAwB;AACpBhB,EAAAA,IAAI,EAAElB,SAAS,CAACmC,KAAV,CAAgBC;AADF,CAAxB;AAIA,eAAerB,WAAf","sourcesContent":["import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PropTypes from 'prop-types';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    FormHelperText\r\n} from '@material-ui/core';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 100,\r\n        },\r\n    },\r\n};\r\n\r\nfunction SelectField(props) {\r\n    const { label, data, ...rest } = props;\r\n    const [field, meta] = useField(props);\r\n    const { value: selectedValue } = field;\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n    const isError = touched && error && true;\r\n    function _renderHelperText() {\r\n        if (isError) {\r\n            return <FormHelperText>{error}</FormHelperText>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl {...rest} error={isError}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <Select multiple {...field} MenuProps={MenuProps} value={selectedValue ? selectedValue : ''}>\r\n                {data.map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                        <Checkbox checked={selectedValue.indexOf(item.id) > -1} />\r\n                        <ListItemText primary={item.name} />\r\n                    </MenuItem>\r\n\r\n                ))}\r\n            </Select>\r\n            {_renderHelperText()}\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nSelectField.defaultProps = {\r\n    data: []\r\n};\r\n\r\nSelectField.propTypes = {\r\n    data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SelectField;\r\n"]},"metadata":{},"sourceType":"module"}