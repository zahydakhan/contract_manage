{"ast":null,"code":"import * as CONFIG_TAGS_types from './config_tags.types'; // TAGS Fetching Actions\n\nexport var fetchTAGSStart = function fetchTAGSStart() {\n  return {\n    type: CONFIG_TAGS_types.FETCH_TAGS_START\n  };\n};\nexport var fetchTAGSSuccess = function fetchTAGSSuccess(stateList) {\n  return {\n    type: CONFIG_TAGS_types.FETCH_TAGS_SUCCESS,\n    payload: stateList\n  };\n};\nexport var fetchTAGSFailure = function fetchTAGSFailure(errorMessage) {\n  return {\n    type: CONFIG_TAGS_types.FETCH_TAGS_FAILURE,\n    payload: errorMessage\n  };\n}; // TAGS Addition Actions\n\nexport var addTAGSStart = function addTAGSStart(newData) {\n  return {\n    type: CONFIG_TAGS_types.ADD_TAGS_START,\n    payload: newData\n  };\n};\nexport var addTAGSSuccess = function addTAGSSuccess(stateList) {\n  return {\n    type: CONFIG_TAGS_types.ADD_TAGS_SUCCESS,\n    payload: stateList\n  };\n};\nexport var addTAGSFailure = function addTAGSFailure(errorMessage) {\n  return {\n    type: CONFIG_TAGS_types.ADD_TAGS_FAILURE,\n    payload: errorMessage\n  };\n}; //state Deletion actions\n\nexport var delTAGSStart = function delTAGSStart(row) {\n  return {\n    type: CONFIG_TAGS_types.DEL_TAGS_START,\n    payload: row\n  };\n};\nexport var delTAGSSuccess = function delTAGSSuccess(stateList) {\n  return {\n    type: CONFIG_TAGS_types.DEL_TAGS_SUCCESS,\n    payload: stateList\n  };\n};\nexport var delTAGSFailure = function delTAGSFailure(errorMessage) {\n  return {\n    type: CONFIG_TAGS_types.DEL_TAGS_FAILURE,\n    payload: errorMessage\n  };\n};","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/src/redux/config_tags/config_tags.actions.js"],"names":["CONFIG_TAGS_types","fetchTAGSStart","type","FETCH_TAGS_START","fetchTAGSSuccess","stateList","FETCH_TAGS_SUCCESS","payload","fetchTAGSFailure","errorMessage","FETCH_TAGS_FAILURE","addTAGSStart","newData","ADD_TAGS_START","addTAGSSuccess","ADD_TAGS_SUCCESS","addTAGSFailure","ADD_TAGS_FAILURE","delTAGSStart","row","DEL_TAGS_START","delTAGSSuccess","DEL_TAGS_SUCCESS","delTAGSFailure","DEL_TAGS_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,iBAAZ,MAAmC,qBAAnC,C,CAEA;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AACjCC,IAAAA,IAAI,EAAEF,iBAAiB,CAACG;AADS,GAAP;AAAA,CAAvB;AAIP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,SAAS;AAAA,SAAK;AAC1CH,IAAAA,IAAI,EAAEF,iBAAiB,CAACM,kBADkB;AAE1CC,IAAAA,OAAO,EAAEF;AAFiC,GAAL;AAAA,CAAlC;AAKP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,YAAY;AAAA,SAAK;AAC7CP,IAAAA,IAAI,EAAEF,iBAAiB,CAACU,kBADqB;AAE7CH,IAAAA,OAAO,EAAEE;AAFoC,GAAL;AAAA,CAArC,C,CAKP;;AACA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD;AAAA,SAAc;AACtCV,IAAAA,IAAI,EAAEF,iBAAiB,CAACa,cADc;AAEtCN,IAAAA,OAAO,EAAEK;AAF6B,GAAd;AAAA,CAArB;AAKP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAT,SAAS;AAAA,SAAK;AACxCH,IAAAA,IAAI,EAAEF,iBAAiB,CAACe,gBADgB;AAExCR,IAAAA,OAAO,EAAEF;AAF+B,GAAL;AAAA,CAAhC;AAKP,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAAAP,YAAY;AAAA,SAAK;AAC3CP,IAAAA,IAAI,EAAEF,iBAAiB,CAACiB,gBADmB;AAE3CV,IAAAA,OAAO,EAAEE;AAFkC,GAAL;AAAA,CAAnC,C,CAMP;;AACA,OAAO,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD;AAAA,SAAU;AAClCjB,IAAAA,IAAI,EAAEF,iBAAiB,CAACoB,cADU;AAElCb,IAAAA,OAAO,EAAEY;AAFyB,GAAV;AAAA,CAArB;AAKP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAhB,SAAS;AAAA,SAAK;AACxCH,IAAAA,IAAI,EAAEF,iBAAiB,CAACsB,gBADgB;AAExCf,IAAAA,OAAO,EAAEF;AAF+B,GAAL;AAAA,CAAhC;AAKP,OAAO,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,CAAAd,YAAY;AAAA,SAAK;AAC3CP,IAAAA,IAAI,EAAEF,iBAAiB,CAACwB,gBADmB;AAE3CjB,IAAAA,OAAO,EAAEE;AAFkC,GAAL;AAAA,CAAnC","sourcesContent":["import * as CONFIG_TAGS_types from './config_tags.types';\r\n\r\n// TAGS Fetching Actions\r\nexport const fetchTAGSStart = () => ({\r\n    type: CONFIG_TAGS_types.FETCH_TAGS_START\r\n});\r\n\r\nexport const fetchTAGSSuccess = stateList => ({\r\n    type: CONFIG_TAGS_types.FETCH_TAGS_SUCCESS,\r\n    payload: stateList\r\n});\r\n\r\nexport const fetchTAGSFailure = errorMessage => ({\r\n    type: CONFIG_TAGS_types.FETCH_TAGS_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\n// TAGS Addition Actions\r\nexport const addTAGSStart = (newData) => ({\r\n    type: CONFIG_TAGS_types.ADD_TAGS_START,\r\n    payload: newData\r\n});\r\n\r\nexport const addTAGSSuccess = stateList => ({\r\n    type: CONFIG_TAGS_types.ADD_TAGS_SUCCESS,\r\n    payload: stateList\r\n});\r\n\r\nexport const addTAGSFailure = errorMessage => ({\r\n    type: CONFIG_TAGS_types.ADD_TAGS_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\n\r\n//state Deletion actions\r\nexport const delTAGSStart = (row) => ({\r\n    type: CONFIG_TAGS_types.DEL_TAGS_START,\r\n    payload: row\r\n});\r\n\r\nexport const delTAGSSuccess = stateList => ({\r\n    type: CONFIG_TAGS_types.DEL_TAGS_SUCCESS,\r\n    payload: stateList\r\n});\r\n\r\nexport const delTAGSFailure = errorMessage => ({\r\n    type: CONFIG_TAGS_types.DEL_TAGS_FAILURE,\r\n    payload: errorMessage\r\n});"]},"metadata":{},"sourceType":"module"}