{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zahyd\\\\OneDrive\\\\Desktop\\\\contract2\\\\Contract\\\\contract_frontend\\\\src\\\\pages\\\\configurations\\\\contract_configurations\\\\div_config\\\\div.form.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addDIVStart } from '../../../../redux/config_div/config_div.actions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    btn: {\n      marginTop: '1.5em'\n    },\n    title: {\n      marginTop: '1em'\n    }\n  };\n});\nvar validationSchema = yup.object({\n  name: yup.string('Division').required('Division is required')\n});\n\nvar DivAddForm = function DivAddForm(_ref) {\n  _s();\n\n  var setOpen = _ref.setOpen;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitError = _useState2[0],\n      setSubmitError = _useState2[1];\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var formik = useFormik({\n    initialValues: {\n      name: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      //alert(JSON.stringify(values, null, 2));\n      dispatch(addDIVStart(values));\n      setOpen(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h3\",\n      children: \" Add Division Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"divname\",\n        name: \"divname\",\n        label: \"Division\",\n        value: formik.values.divname,\n        onChange: formik.handleChange,\n        error: formik.touched.divname && Boolean(formik.errors.divname),\n        helperText: formik.touched.divname && formik.errors.divname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Add Division\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DivAddForm, \"gOJVZTtUKvLQnbgnKvgiHnqvwVU=\", false, function () {\n  return [useStyles, useDispatch, useFormik];\n});\n\n_c = DivAddForm;\nexport default DivAddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DivAddForm\");","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/src/pages/configurations/contract_configurations/div_config/div.form.jsx"],"names":["React","useState","useFormik","yup","Button","TextField","makeStyles","Typography","useDispatch","useSelector","addDIVStart","useStyles","theme","btn","marginTop","title","validationSchema","object","name","string","required","DivAddForm","setOpen","submitError","setSubmitError","classes","dispatch","formik","initialValues","onSubmit","values","handleSubmit","divname","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addDIVStart } from '../../../../redux/config_div/config_div.actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btn: {\r\n        marginTop: '1.5em'\r\n    },\r\n    title: {\r\n        marginTop: '1em'\r\n    },\r\n\r\n}));\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Division')\r\n        .required('Division is required'),\r\n});\r\n\r\nconst DivAddForm = ({ setOpen }) => {\r\n    const [submitError, setSubmitError] = useState('');\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            //alert(JSON.stringify(values, null, 2));\r\n            dispatch(addDIVStart(values))\r\n\r\n            setOpen(false)\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Typography className={classes.title} variant='h3'> Add Division Form</Typography>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"divname\"\r\n                    name=\"divname\"\r\n                    label=\"Division\"\r\n                    value={formik.values.divname}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.divname && Boolean(formik.errors.divname)}\r\n                    helperText={formik.touched.divname && formik.errors.divname}\r\n                />\r\n\r\n                <Button className={classes.btn} color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n                    Add Division\r\n        </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DivAddForm"]},"metadata":{},"sourceType":"module"}