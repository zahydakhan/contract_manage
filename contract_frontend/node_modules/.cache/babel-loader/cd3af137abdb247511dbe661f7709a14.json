{"ast":null,"code":"import _toConsumableArray from \"C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as CONFIG_types from './config.types';\nvar INITIAL_STATE = {\n  regionList: [],\n  isRegionFetching: false,\n  errorRegionMessage: undefined\n};\n\nvar configReducer = function configReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //Region Fetch\n    case CONFIG_types.FETCH_REGION_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: true\n      });\n\n    case CONFIG_types.FETCH_REGION__SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: false,\n        regionList: action.payload\n      });\n\n    case CONFIG_types.FETCH_REGION__FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: false,\n        errorRegionMessage: action.payload\n      });\n    //Region Add\n\n    case CONFIG_types.ADD_REGION_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: true\n      });\n\n    case CONFIG_types.ADD_REGION__SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: false,\n        regionList: [].concat(_toConsumableArray(state.regionList), [action.payload])\n      });\n\n    case CONFIG_types.ADD_REGION__FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: false,\n        errorRegionMessage: action.payload\n      });\n    //Region Delete\n\n    case CONFIG_types.DEL_REGION_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: true\n      });\n\n    case CONFIG_types.DEL_REGION__SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: false,\n        regionList: state.regionList.filter(function (item, index) {\n          return item.id !== action.payload.id;\n        })\n      });\n\n    case CONFIG_types.DEL_REGION__FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isRegionFetching: false,\n        errorRegionMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default configReducer;","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/contract2/Contract/contract_frontend/src/redux/config/config.reducer.js"],"names":["CONFIG_types","INITIAL_STATE","regionList","isRegionFetching","errorRegionMessage","undefined","configReducer","state","action","type","FETCH_REGION_START","FETCH_REGION__SUCCESS","payload","FETCH_REGION__FAILURE","ADD_REGION_START","ADD_REGION__SUCCESS","ADD_REGION__FAILURE","DEL_REGION_START","DEL_REGION__SUCCESS","filter","item","index","id","DEL_REGION__FAILURE"],"mappings":";;AAAA,OAAO,KAAKA,YAAZ,MAA8B,gBAA9B;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,EADM;AAElBC,EAAAA,gBAAgB,EAAE,KAFA;AAGlBC,EAAAA,kBAAkB,EAAEC;AAHF,CAAtB;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKT,YAAY,CAACU,kBAAlB;AACI,6CACOH,KADP;AAEIJ,QAAAA,gBAAgB,EAAE;AAFtB;;AAIJ,SAAKH,YAAY,CAACW,qBAAlB;AACI,6CACOJ,KADP;AAEIJ,QAAAA,gBAAgB,EAAE,KAFtB;AAGID,QAAAA,UAAU,EAAEM,MAAM,CAACI;AAHvB;;AAKJ,SAAKZ,YAAY,CAACa,qBAAlB;AACI,6CACON,KADP;AAEIJ,QAAAA,gBAAgB,EAAE,KAFtB;AAGIC,QAAAA,kBAAkB,EAAEI,MAAM,CAACI;AAH/B;AAKA;;AACJ,SAAKZ,YAAY,CAACc,gBAAlB;AACI,6CACOP,KADP;AAEIJ,QAAAA,gBAAgB,EAAE;AAFtB;;AAIJ,SAAKH,YAAY,CAACe,mBAAlB;AACI,6CACOR,KADP;AAEIJ,QAAAA,gBAAgB,EAAE,KAFtB;AAGID,QAAAA,UAAU,+BAAMK,KAAK,CAACL,UAAZ,IAAwBM,MAAM,CAACI,OAA/B;AAHd;;AAKJ,SAAKZ,YAAY,CAACgB,mBAAlB;AACI,6CACOT,KADP;AAEIJ,QAAAA,gBAAgB,EAAE,KAFtB;AAGIC,QAAAA,kBAAkB,EAAEI,MAAM,CAACI;AAH/B;AAKA;;AACJ,SAAKZ,YAAY,CAACiB,gBAAlB;AACI,6CACOV,KADP;AAEIJ,QAAAA,gBAAgB,EAAE;AAFtB;;AAIJ,SAAKH,YAAY,CAACkB,mBAAlB;AACI,6CACOX,KADP;AAEIJ,QAAAA,gBAAgB,EAAE,KAFtB;AAGID,QAAAA,UAAU,EAAEK,KAAK,CAACL,UAAN,CAAiBiB,MAAjB,CAAwB,UAACC,IAAD,EAAOC,KAAP;AAAA,iBAAiBD,IAAI,CAACE,EAAL,KAAYd,MAAM,CAACI,OAAP,CAAeU,EAA5C;AAAA,SAAxB;AAHhB;;AAKJ,SAAKtB,YAAY,CAACuB,mBAAlB;AACI,6CACOhB,KADP;AAEIJ,QAAAA,gBAAgB,EAAE,KAFtB;AAGIC,QAAAA,kBAAkB,EAAEI,MAAM,CAACI;AAH/B;;AAKJ;AACI,aAAOL,KAAP;AAxDR;AA0DH,CA3DD;;AA6DA,eAAeD,aAAf","sourcesContent":["import * as CONFIG_types from './config.types';\r\n\r\nconst INITIAL_STATE = {\r\n    regionList: [],\r\n    isRegionFetching: false,\r\n    errorRegionMessage: undefined\r\n};\r\n\r\n\r\nconst configReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        //Region Fetch\r\n        case CONFIG_types.FETCH_REGION_START:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: true\r\n            };\r\n        case CONFIG_types.FETCH_REGION__SUCCESS:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: false,\r\n                regionList: action.payload\r\n            };\r\n        case CONFIG_types.FETCH_REGION__FAILURE:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: false,\r\n                errorRegionMessage: action.payload\r\n            };\r\n            //Region Add\r\n        case CONFIG_types.ADD_REGION_START:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: true\r\n            };\r\n        case CONFIG_types.ADD_REGION__SUCCESS:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: false,\r\n                regionList: [...state.regionList, action.payload]\r\n            };\r\n        case CONFIG_types.ADD_REGION__FAILURE:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: false,\r\n                errorRegionMessage: action.payload\r\n            };\r\n            //Region Delete\r\n        case CONFIG_types.DEL_REGION_START:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: true\r\n            };\r\n        case CONFIG_types.DEL_REGION__SUCCESS:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: false,\r\n                regionList: state.regionList.filter((item, index) => item.id !== action.payload.id)\r\n            };\r\n        case CONFIG_types.DEL_REGION__FAILURE:\r\n            return {\r\n                ...state,\r\n                isRegionFetching: false,\r\n                errorRegionMessage: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default configReducer;"]},"metadata":{},"sourceType":"module"}